# Analytics and dashboard schema for e-commerce platform

type DashboardStats {
  revenue: RevenueStats!
  orders: OrderStats!
  products: ProductStats!
  customers: CustomerStats!
  traffic: TrafficStats!
  conversionFunnel: ConversionFunnel!
}

type RevenueStats {
  total: Money!
  change: Float! # Percentage change from previous period
  trend: [DataPoint!]!
  byPaymentMethod: [PaymentMethodStats!]!
  byCategory: [CategoryStats!]!
  topProducts: [ProductRevenueStats!]!
  projectedRevenue: Money!
}

type OrderStats {
  total: Int!
  pending: Int!
  completed: Int!
  cancelled: Int!
  averageOrderValue: Money!
  trend: [DataPoint!]!
  fulfillmentStatus: [FulfillmentStats!]!
  ordersByDay: [OrdersByDay!]!
}

type ProductStats {
  totalProducts: Int!
  activeProducts: Int!
  outOfStock: Int!
  lowStock: Int!
  topSellingProducts: [TopSellingProduct!]!
  categoryPerformance: [CategoryPerformance!]!
}

type CustomerStats {
  totalCustomers: Int!
  newCustomers: Int!
  returningCustomers: Int!
  customerLifetimeValue: Money!
  customerAcquisitionCost: Money!
  churnRate: Float!
  topCustomers: [TopCustomer!]!
}

type TrafficStats {
  totalVisitors: Int!
  uniqueVisitors: Int!
  pageViews: Int!
  bounceRate: Float!
  averageSessionDuration: Int! # in seconds
  conversionRate: Float!
  topPages: [TopPage!]!
  trafficSources: [TrafficSource!]!
}

type ConversionFunnel {
  visitors: Int!
  productViews: Int!
  addToCarts: Int!
  checkouts: Int!
  purchases: Int!
  stages: [FunnelStage!]!
}

type DataPoint {
  date: DateTime!
  value: Float!
}

type PaymentMethodStats {
  method: String!
  amount: Money!
  count: Int!
  percentage: Float!
}

type CategoryStats {
  categoryId: ID!
  categoryName: String!
  revenue: Money!
  orders: Int!
  averageOrderValue: Money!
}

type ProductRevenueStats {
  productId: ID!
  productName: String!
  revenue: Money!
  unitsSold: Int!
  averagePrice: Money!
}

type FulfillmentStats {
  status: FulfillmentStatus!
  count: Int!
  percentage: Float!
}

type OrdersByDay {
  date: DateTime!
  orders: Int!
  revenue: Money!
}

type TopSellingProduct {
  productId: ID!
  productName: String!
  unitsSold: Int!
  revenue: Money!
  image: String
}

type CategoryPerformance {
  categoryId: ID!
  categoryName: String!
  productsCount: Int!
  revenue: Money!
  conversionRate: Float!
}

type TopCustomer {
  customerId: ID!
  customerName: String!
  email: String!
  totalSpent: Money!
  orderCount: Int!
  lastOrderDate: DateTime!
}

type TopPage {
  path: String!
  views: Int!
  uniqueViews: Int!
  bounceRate: Float!
}

type TrafficSource {
  source: String!
  visitors: Int!
  percentage: Float!
  conversionRate: Float!
}

type FunnelStage {
  stage: String!
  count: Int!
  conversionRate: Float!
}

# Period enum for analytics
enum Period {
  TODAY
  YESTERDAY
  LAST_7_DAYS
  LAST_30_DAYS
  LAST_90_DAYS
  LAST_YEAR
  CUSTOM
}

# Report types
type SalesReport {
  period: Period!
  totalRevenue: Money!
  totalOrders: Int!
  averageOrderValue: Money!
  data: [SalesDataPoint!]!
  topProducts: [ProductRevenueStats!]!
  topCategories: [CategoryStats!]!
}

type SalesDataPoint {
  date: DateTime!
  revenue: Money!
  orders: Int!
  averageOrderValue: Money!
}

type InventoryReport {
  totalProducts: Int!
  inStock: Int!
  lowStock: Int!
  outOfStock: Int!
  products: [InventoryReportItem!]!
}

type InventoryReportItem {
  productId: ID!
  productName: String!
  sku: String!
  currentStock: Int!
  reservedStock: Int!
  availableStock: Int!
  lowStockThreshold: Int!
  status: InventoryStatus!
}

enum InventoryStatus {
  IN_STOCK
  LOW_STOCK
  OUT_OF_STOCK
  DISCONTINUED
}

type CustomerAnalytics {
  segmentation: CustomerSegmentation!
  totalCustomers: Int!
  segments: [CustomerSegmentStats!]!
  cohortAnalysis: [CohortData!]!
  churnAnalysis: ChurnAnalysis!
}

type CustomerSegmentStats {
  segment: String!
  count: Int!
  percentage: Float!
  averageOrderValue: Money!
  totalRevenue: Money!
}

type CohortData {
  cohort: String!
  size: Int!
  retentionRates: [Float!]!
}

type ChurnAnalysis {
  churnRate: Float!
  atRiskCustomers: Int!
  predictedChurn: [ChurnPrediction!]!
}

type ChurnPrediction {
  customerId: ID!
  customerName: String!
  churnProbability: Float!
  lastOrderDate: DateTime!
  predictedChurnDate: DateTime!
}

# Input types
input ReportFilters {
  dateRange: DateRange
  categories: [ID!]
  customers: [ID!]
  products: [ID!]
  paymentMethods: [String!]
  orderStatuses: [OrderStatus!]
}

enum GroupBy {
  DAY
  WEEK
  MONTH
  QUARTER
  YEAR
  CATEGORY
  PRODUCT
  CUSTOMER
  PAYMENT_METHOD
}

enum CustomerSegmentation {
  VALUE_BASED
  FREQUENCY_BASED
  RECENCY_BASED
  RFM_ANALYSIS
  BEHAVIORAL
}

# Real-time analytics
type LiveAnalytics {
  activeVisitors: Int!
  currentRevenue: Money!
  todayOrders: Int!
  recentOrders: [Order!]!
  popularProducts: [PopularProduct!]!
  lastUpdated: DateTime!
}

type PopularProduct {
  productId: ID!
  productName: String!
  views: Int!
  addToCarts: Int!
  purchases: Int!
  conversionRate: Float!
}