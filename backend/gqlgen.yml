# GraphQL configuration for gqlgen
schema:
  - graph/schema/*.graphql

exec:
  filename: graph/generated.go
  package: graph

resolver:
  filename: graph/resolver.go
  package: graph
  type: Resolver

models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32

# Model bindings to existing domain entities
  Product:
    model: ecommerce-saas/internal/domain/entities.Product
  Order:
    model: ecommerce-saas/internal/domain/entities.Order
  User:
    model: ecommerce-saas/internal/domain/entities.User
  Tenant:
    model: ecommerce-saas/internal/domain/entities.Tenant

# Custom scalar types
  DateTime:
    model: time.Time
  Money:
    model: ecommerce-saas/graph/scalars.Money

# Disable automatic resolver generation for certain types
autobind: []

# Skip validation for development
skip_validation: false

# Federation configuration (for future microservices)
federation:
  filename: graph/federation.go
  package: graph